class Solution {
public:
    vector<int> sortedSquares(vector<int>& nums) {
        //1、暴力解法
        // for(int i = 0; i < nums.size(); ++ i)
        // {
        //     nums[i] *= nums[i];
        // }
        // sort(nums.begin(), nums.end());
        // return nums;

        //2、双指针
        //left在起点，right在末尾 在定义一个变量k在末尾来指定当前平方
        //定义一个新容器 v
        //A[left] * A[left] > A[right] * A[right] v[k--] = A[left] * A[left]
        //相反 v[k--] = A[right] * A[right];
        vector<int> v(nums.size(), 0);
        int left = 0, right = nums.size() - 1;
        int k = nums.size() - 1;
        while(left <= right)
        {
            if(nums[left] * nums[left] > nums[right] * nums[right])
            {
                v[k--] = nums[left] * nums[left];
                left++;
            }
            else
            {
                v[k--] = nums[right] * nums[right];
                --right;
            }
        }
        return v;
    }
};